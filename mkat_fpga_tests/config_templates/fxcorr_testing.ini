# NB: section names are case sensitive, but option names are NOT!

# Configuration for automated testing using the 32 roaches dedicated for the purpose.

# There are 32 roaches, but they are (due to switch limitations) connected as
# two separate 16-roach systems, with separate data switches. There is a 40gbit
# connection from the one switch to the other, so the control computer dbedmc0
# (which has an 40Gbe interface) can capture from either. It has a 40Gb
# interface at eth2, 10.101.0.2, and also eth2:0, 10.100.0.1. Presumably you
# could use the two different networks (10.101.0.0 and 10.100.0.0) for the two
# separate systems.

# roaches   - top to bottom
#
# Use the 10.101.0.0 network for data.
#
###
# top-16, connected to top data switch:
##
# rack no -  Roach       - No ports 
# 38	  - roach02095B - 2 ports  -- (gbe0 SPEAD errors)
# 37	  - roach02095C - 4 ports  -- F
# 36	  - roach020944 - 4 ports  -- F
# 35	  - roach020921 - 4 ports  -- (deprogrammes itself?)
# 34	  - roach02091E - 4 ports  -- (deprogrammes itself?)
# 33	  - roach020A05 - 4 ports  -- F
# 32	  - roach020959 - 4 ports  -- F
# 31      - roach020958 - 4 ports  -- D
# 30      - Brush panel   
# 29      - + top data switch
# 28	  - roach020A0A - 2 ports
# 27	  - roach020A0C - 2 ports
# 26	  - roach020937 - 2 ports
# 25	  - roach020936 - 2 ports
# 24	  - roach020948 - 2 ports
# 23	  - roach02092E - 2 ports
# 22	  - roach020951 - 2 ports
# 21      - roach020950 - 2 ports

# 20      - empty

###
# bottom-16, connected to top data switch:
##
# rack no -  Roach       - No ports 
# 19  	  - roach020945 - 4 ports  
# 18  	  - roach020946 - 4 ports  
# 17  	  - roach020A11 - 4 ports  
# 16  	  - roach020A12 - 4 ports  
# 15  	  - roach020941 - 4 ports  
# 14  	  - roach02093A - 4 ports  
# 13      - roach020910 - 4 ports  
# 12      - roach020911 - 4 ports  
# 11      - Data switch bottom
# 10      - Data switch bottom
#  9      - roach020953 - 2 ports
#  8 	  - roach02091C - 2 ports
#  7 	  - roach020A06 - 2 ports
#  6 	  - roach020A0E - 2 ports
#  5 	  - roach02095A - 2 ports
#  4 	  - roach020A14 - 2 ports
#  3 	  - roach020952 - 2 ports
#  2 	  - roach020A07 - 2 ports



[FxCorrelator]
katcp_port = 7147
sample_rate_hz = 1712000000
# Number of bits used in the F engine for timekeeping (the master counter)
mcnt_bits = 48
# Number of bits used in the packet header for timestamping
pcnt_bits = 48
# How long should we wait for ARP resolution?
arp_wait_time = 5
# Rate at which FPGA registers are polled to update sensors
sensor_poll_time = 1
# Version of IGMP protocol to force on the engines
igmp_version = 2

[fengine]
# Need to have 4 ports
hosts = roach020959,roach02095C,roach020944,roach020A05

bitstream = {BITSTREAM_HOME}/feng_wide/r2_c8n856m4k.fpg

# names and IPs of the sources to the f-engines
n_antennas = 4
# Number of f-engines per host - the PFB does two-pols, so only one, but it is two f-engines/pols
f_per_fpga = 2
# names to give the source polarisations - these must map to the IPs
source_names = m000_x,m000_y,m001_x,m001_y,m002_x,m002_y,m003_x,m003_y
# my fake digitiser (D-engine), only two inputs so repeat four times to emulate four antennas
source_mcast_ips = 239.0.1.68+1:8888,239.0.1.70+1:8888,239.0.1.68+1:8888,239.0.1.70+1:8888,239.0.1.68+1:8888,239.0.1.70+1:8888,239.0.1.68+1:8888,239.0.1.70+1:8888
# where should the f-data go?
destination_mcast_ips = 239.2.1.150+16:8888
# number of 10gbe ports per f-engine
ports_per_fengine = 2
# how many bits per ADC sample
sample_bits = 10
# how many parallel ADC samples do we get per digitiser clock?
adc_demux_factor = 8
# The processed analogue bandwidth
bandwidth = 856000000
# the centre frequency on the sky
true_cf = 1284000000
# Number of channels produced by the f-engine
n_chans = 4096
# FFT shifting schedule in decimal. A binary '1' shifts, a zero does not.
#fft_shift = 2032
fft_shift = 8191
# The fixed-point format post FFT in the F engines
quant_format = 8.7
# Packet length of 10Gbe exchange data in 64 bit words.
10gbe_pkt_len = 128
# MAC, IP and port for 10Gbe cores
10gbe_macprefix = 02:02:00:00:10:
10gbe_macbase = 10
10gbe_start_ip = 10.101.0.200
10gbe_port = 8888
# SPEAD flavour, string in the form XX,YY. Default: 64,48. See the SPEAD documentation for details.
spead_flavour = 64,48
# Equalisation settings - one per input - must have the same suffix as the source names above
eq_poly_m000_x = 300
eq_poly_m000_y = 300
eq_poly_m001_x = 300
eq_poly_m001_y = 300
eq_poly_m002_x = 300
eq_poly_m002_y = 300
eq_poly_m003_x = 300
eq_poly_m003_y = 300
# Delay settings
min_load_time = 23
network_latency_adjust = 0

[xengine]
hosts = roach020A0A,roach020A0C,roach020937,roach020936,roach020948,roach02092E,roach020951,roach020950
bitstream = {BITSTREAM_HOME}/xeng_wide/r2_4a4x128f.fpg

# x fpga clock speed
x_fpga_clock = 230000000
# Number of X engines per host
x_per_fpga = 4
# Number of spectra to integrate in QDR
accumulation_len = 816
# Number of accumulations performed in the X engine cores
xeng_accumulation_len = 256 
# Number of bits the vacc uses to represent one number
xeng_outbits = 32
# MAC, IP and port for 10Gbe cores
10gbe_macprefix = 02:02:00:00:20:
10gbe_macbase = 10
10gbe_start_ip = 10.101.0.80
10gbe_port = 8888
# data product names and destinations
output_products = c856M4k
#output_destination_ip = 239.2.1.100
output_destination_ip = 10.101.0.2
output_destination_port = 8888
# what is the outgoing interface address? i.e. the eth interface that will send the meta information
multicast_interface_address = 127.0.0.1
# Packet length of 10Gbe exchange data in 64 bit words.
10gbe_pkt_len = 512

[dsimengine]
sample_rate_hz = 1712000000
bitstream = {BITSTREAM_HOME}/deng/r2_deng_tvg.fpg
host = roach020958
10gbe_start_mac = 02:02:00:00:50:01
10gbe_start_ip = 10.101.0.40
10gbe_port = 8888
pol0_destination_start_ip = 239.0.1.68
pol1_destination_start_ip = 239.0.1.70
# pol1_destination_start_ip = 10.101.0.2
# pol1_single_destination = 1